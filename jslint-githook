#!/bin/sh
# --
# A hook to automatically execute jslint on modified javascript files after every commit.
# --
# To enable this hook, rename this file to "pre-commit" and insert it in you .git/hooks/ folder
# --

PathToJslint="js/libs/jsl/jsl"
AtLeastOneError=false
modifiedJavascriptFileNames=""
JSFileNames=''

validationErrorHandler(){
	AtLeastOneError=true
}


printSectionLine(){
	echo "# --------------------------------------------------"
}

printSummary(){
	printSectionLine
	echo "#  $1"
	printSectionLine
}

printHeader(){
	printSectionLine
	echo "# Executing JsLint validation"
	printSectionLine
}

printValidatingFile(){
	printSectionLine
	echo "# VALIDATING FILE: $1"
	printSectionLine
}

validateJSLintPath(){
	if ! [ -f $PathToJslint ]
		then
		printSummary "jslint-hook not working, please download jslint file and set the PathToJslint variable."
		exit 0
	fi
}

getModifiedJavascriptFiles(){
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
	if git-rev-parse --verify HEAD >/dev/null 2>&1; then
	    against=HEAD
	fi

	getNamesCommand=`git diff-index --name-only $against -- | cut -c1-`
	counter=0
	for NAME in $getNamesCommand
	do
		JSFileNames[$counter]=$NAME
		counter+=1
	done
}

validateJSFilesAreModified(){

	getModifiedJavascriptFiles

	if [ ${#JSFileNames[0]} <= 0 ];
		then
		echo "#  No javascript changes"
		exit 0
	fi
}


validateJSLintPath
validateJSFilesAreModified
printHeader

trap 'validationErrorHandler' ERR

for FILE in $JSFileNames
do
	printValidatingFile $FILE
	`$PathToJslint -process $FILE -nologo -nofilelisting +recurse`
	echo "$result"
done


if $AtLeastOneError
	then 
		printSummary "Commit blocked, 1 or more errors/warnings on Javascript code, please correct and try again.";
		exit 1
	else
		printSummary "Javascript validation successful, No Erros Found.";
		exit 0
fi	
